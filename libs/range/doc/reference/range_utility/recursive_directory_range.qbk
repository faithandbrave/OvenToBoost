[/
    Copyright 2011 Akira Takahashi
    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
/]
[section:recursive_directory_range recursive_directory_range]

[heading Prototype]

``
iterator_range<filesystem::recursive_directory_iterator>
  recursive_directory_range(const filesystem::path& p);
``

[heading Namespace]

`boost` or `boost::range`.

[heading Description]

`recursive_directory_range` is a __single_pass_range__ which accesses the contents of a recursive directory.

[heading Header]
``
<boost/range/directory_range.hpp>
``
or
``
<boost/range/range/directory_range.hpp>
``

[heading Returned Range Category]
__single_pass_range__

[heading Example]

``
#include <iostream>
#include <boost/range/directory_range.hpp>
#include <boost/range/algorithm/for_each.hpp>

void disp(const boost::filesystem::path& p)
{
    std::cout << p.filename() << std::endl;
}

int main()
{
    boost::filesystem::path p = "test_directory";
    boost::for_each(boost::recursive_directory_range(p), disp);
}
``

This would produce the posibility output:
``
a.txt
b.png
c_dir
d.cpp
``

[endsect]
